function evntOut = sortEvnt_with_splay(evntIn,splay)
% sort the event table so it would be in increasing time order
% evntIn  - is a structure as generated by read_tbl
% evntOut - is the same as evntIn but with time sorted in increasing order.

% MA Jul-2001
% UPDATES
% 14-oct-2003 fields fileNo and timeInFile are also updated
% 20-Sep-2006 events are reconnected even if time is OK (to fit with
%             removeSpikes).
% 22-Jul-2007 prevI, prevN, nextI, nextN are all type int32, If fileNo and
%            timeInfile are available they are soted too
% 04-Mar-2014 evnts with exactly the same time are sorted by name (required
%             for patterns.  MA
% 19-Mar-2017 error in resorting coincident events - fixrd  MA

%% internal params
maxCoinc = 500;     % maximal numbers of coincident events

%% sort the times
[~,I] = sort(evntIn.time);

%% Copy basic parameters
evntOut = make_evnt_tbl;
len = evntIn.eTableSize;
% copy the things that didnot change
evntOut.ver = evntIn.ver;
evntOut.tU = evntIn.tU;
evntOut.title = evntIn.title;
evntOut.eTableSize = evntIn.eTableSize;
evntOut.fTableSize = evntIn.fTableSize;
evntOut.file = evntIn.file;
evntOut.fStart = evntIn.fStart;
evntOut.fEnds = evntIn.fEnds;

%% copy items with simple reorder
evntOut.time = evntIn.time(I);
evntOut.name = evntIn.name(I);
evntOut.valid = evntIn.valid(I);

%% names in coincident events must be ordered
ii = 1;
while ii < evntOut.eTableSize-1
    t0 = evntOut.time(ii);
    i1 = ii+maxCoinc;
    if i1 > evntOut.eTableSize
        i1 = evntOut.eTableSize;
    end
    Icoinc = find(evntOut.time(ii:i1)==t0); 
    numCoinc = length(Icoinc)-1;
    if numCoinc>=1
        names = evntOut.name(ii:ii+numCoinc);
        if ~any(names<=0)  % sort only positive names
            evntOut.name(ii:ii+numCoinc) = sort(names, 'ascend');
        end
    end
    ii = ii+numCoinc+1;
end

%% rearrange the indices
evntOut.prevI = int32([-1, 1:len-1]);
evntOut.nextI = int32([2:len, -1]);
evntOut.prevN(1:len) = int32(-1);  % need to find a way to do that efficiently
evntOut.nextN(1:len) = int32(-1);
if isfield(evntIn , 'fileNo')
    if length(evntIn.fileNo)< length(I) % fill in the missing info
        fn = [evntIn.fileNo evntIn.fileNo(end)];
        evntIn.fileNo=fn;
        tif = [evntIn.timeInFile evntIn.fEnds(end)-evntIn.fStart(end)];
        evntIn.timeInFile = tif;
    end
    evntOut.fileNo=evntIn.fileNo(I); 
end
if isfield(evntIn , 'timeInFile')
    evntOut.timeInFile=evntIn.timeInFile(I); 
end
%  evntOut = addFileNo(evntOut); % does not work after squeeze

listId = unique(evntOut.name);
for ii = 1:length(listId)  % make the connections among identical items
    I = find(evntOut.name == listId(ii));
    if length(I)>1 % make the connection for this name
        evntOut.nextN(I) = int32([I(2:end), -1]);
        evntOut.prevN(I) = int32([-1, I(1:end-1)]);
    end  % end of making the connection for one name
end  % end of connecting all identical items

return
